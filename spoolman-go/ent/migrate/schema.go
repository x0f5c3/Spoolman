// Code generated by ent, DO NOT EDIT.

package migrate

import (
	"entgo.io/ent/dialect/sql/schema"
	"entgo.io/ent/schema/field"
)

var (
	// FilamentsColumns holds the columns for the "filaments" table.
	FilamentsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "registered", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "material", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "price", Type: field.TypeFloat32, Nullable: true},
		{Name: "density", Type: field.TypeFloat32},
		{Name: "diameter", Type: field.TypeFloat32},
		{Name: "weight", Type: field.TypeFloat32, Nullable: true},
		{Name: "spool_weight", Type: field.TypeFloat32, Nullable: true},
		{Name: "article_number", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "comment", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "settings_extruder_temp", Type: field.TypeInt, Nullable: true},
		{Name: "settings_bed_temp", Type: field.TypeInt, Nullable: true},
		{Name: "color_hex", Type: field.TypeString, Nullable: true, Size: 8},
		{Name: "multi_color_hexes", Type: field.TypeString, Nullable: true, Size: 128},
		{Name: "multi_color_direction", Type: field.TypeString, Nullable: true, Size: 16},
		{Name: "external_id", Type: field.TypeString, Nullable: true, Size: 256},
		{Name: "vendor_id", Type: field.TypeInt, Nullable: true},
	}
	// FilamentsTable holds the schema information for the "filaments" table.
	FilamentsTable = &schema.Table{
		Name:       "filaments",
		Columns:    FilamentsColumns,
		PrimaryKey: []*schema.Column{FilamentsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "filaments_spool_vendors_filaments",
				Columns:    []*schema.Column{FilamentsColumns[17]},
				RefColumns: []*schema.Column{SpoolVendorsColumns[0]},
				OnDelete:   schema.SetNull,
			},
		},
	}
	// FilamentFieldsColumns holds the columns for the "filament_fields" table.
	FilamentFieldsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Size: 64},
		{Name: "value", Type: field.TypeString, Size: 2147483647},
		{Name: "filament_id", Type: field.TypeInt},
	}
	// FilamentFieldsTable holds the schema information for the "filament_fields" table.
	FilamentFieldsTable = &schema.Table{
		Name:       "filament_fields",
		Columns:    FilamentFieldsColumns,
		PrimaryKey: []*schema.Column{FilamentFieldsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "filament_fields_filaments_extra",
				Columns:    []*schema.Column{FilamentFieldsColumns[3]},
				RefColumns: []*schema.Column{FilamentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SettingsColumns holds the columns for the "settings" table.
	SettingsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Size: 64},
		{Name: "value", Type: field.TypeString, Size: 2147483647},
		{Name: "last_updated", Type: field.TypeTime},
	}
	// SettingsTable holds the schema information for the "settings" table.
	SettingsTable = &schema.Table{
		Name:       "settings",
		Columns:    SettingsColumns,
		PrimaryKey: []*schema.Column{SettingsColumns[0]},
	}
	// SpoolsColumns holds the columns for the "spools" table.
	SpoolsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "registered", Type: field.TypeTime},
		{Name: "first_used", Type: field.TypeTime, Nullable: true},
		{Name: "last_used", Type: field.TypeTime, Nullable: true},
		{Name: "price", Type: field.TypeFloat32, Nullable: true},
		{Name: "initial_weight", Type: field.TypeFloat32, Nullable: true},
		{Name: "spool_weight", Type: field.TypeFloat32, Nullable: true},
		{Name: "used_weight", Type: field.TypeFloat32},
		{Name: "remaining_weight", Type: field.TypeFloat32},
		{Name: "location", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "lot_nr", Type: field.TypeString, Nullable: true, Size: 64},
		{Name: "comment", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "archived", Type: field.TypeBool, Nullable: true},
		{Name: "filament_id", Type: field.TypeInt},
	}
	// SpoolsTable holds the schema information for the "spools" table.
	SpoolsTable = &schema.Table{
		Name:       "spools",
		Columns:    SpoolsColumns,
		PrimaryKey: []*schema.Column{SpoolsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spools_filaments_spools",
				Columns:    []*schema.Column{SpoolsColumns[13]},
				RefColumns: []*schema.Column{FilamentsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SpoolFieldsColumns holds the columns for the "spool_fields" table.
	SpoolFieldsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Size: 64},
		{Name: "value", Type: field.TypeString, Size: 2147483647},
		{Name: "spool_id", Type: field.TypeInt},
	}
	// SpoolFieldsTable holds the schema information for the "spool_fields" table.
	SpoolFieldsTable = &schema.Table{
		Name:       "spool_fields",
		Columns:    SpoolFieldsColumns,
		PrimaryKey: []*schema.Column{SpoolFieldsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "spool_fields_spools_extra",
				Columns:    []*schema.Column{SpoolFieldsColumns[3]},
				RefColumns: []*schema.Column{SpoolsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// SpoolVendorsColumns holds the columns for the "spool_vendors" table.
	SpoolVendorsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "registered", Type: field.TypeTime},
		{Name: "name", Type: field.TypeString, Size: 64},
		{Name: "empty_spool_weight", Type: field.TypeFloat32, Nullable: true},
		{Name: "comment", Type: field.TypeString, Nullable: true, Size: 1024},
		{Name: "external_id", Type: field.TypeString, Nullable: true, Size: 256},
	}
	// SpoolVendorsTable holds the schema information for the "spool_vendors" table.
	SpoolVendorsTable = &schema.Table{
		Name:       "spool_vendors",
		Columns:    SpoolVendorsColumns,
		PrimaryKey: []*schema.Column{SpoolVendorsColumns[0]},
	}
	// VendorFieldsColumns holds the columns for the "vendor_fields" table.
	VendorFieldsColumns = []*schema.Column{
		{Name: "id", Type: field.TypeInt, Increment: true},
		{Name: "key", Type: field.TypeString, Size: 64},
		{Name: "value", Type: field.TypeString, Size: 2147483647},
		{Name: "vendor_id", Type: field.TypeInt},
	}
	// VendorFieldsTable holds the schema information for the "vendor_fields" table.
	VendorFieldsTable = &schema.Table{
		Name:       "vendor_fields",
		Columns:    VendorFieldsColumns,
		PrimaryKey: []*schema.Column{VendorFieldsColumns[0]},
		ForeignKeys: []*schema.ForeignKey{
			{
				Symbol:     "vendor_fields_spool_vendors_extra",
				Columns:    []*schema.Column{VendorFieldsColumns[3]},
				RefColumns: []*schema.Column{SpoolVendorsColumns[0]},
				OnDelete:   schema.NoAction,
			},
		},
	}
	// Tables holds all the tables in the schema.
	Tables = []*schema.Table{
		FilamentsTable,
		FilamentFieldsTable,
		SettingsTable,
		SpoolsTable,
		SpoolFieldsTable,
		SpoolVendorsTable,
		VendorFieldsTable,
	}
)

func init() {
	FilamentsTable.ForeignKeys[0].RefTable = SpoolVendorsTable
	FilamentFieldsTable.ForeignKeys[0].RefTable = FilamentsTable
	SpoolsTable.ForeignKeys[0].RefTable = FilamentsTable
	SpoolFieldsTable.ForeignKeys[0].RefTable = SpoolsTable
	VendorFieldsTable.ForeignKeys[0].RefTable = SpoolVendorsTable
}
